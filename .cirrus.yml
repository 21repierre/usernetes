# We use Vagrant to prepare cgroup v2 env.

compute_engine_instance:
  image_project: cirrus-images
  image: family/docker-kvm
  platform: linux
  nested_virtualization: true
  # CPU limit: `16 / NTASK`: see https://cirrus-ci.org/faq/#are-there-any-limits
  cpu: 4
  # Memory limit: `4GB * NCPU`
  memory: 16G

template: &TASK_TEMPLATE
  timeout_in: 30m
  env:
    DEBIAN_FRONTEND: noninteractive
    HOME: /root
    DOCKER_BUILDKIT: 1
  info_script:
    - uname -a
    - cat /proc/cpuinfo
    - docker info
# Upgrade Docker to 20.10.10 or later.
# https://medium.com/nttlabs/ubuntu-21-10-and-fedora-35-do-not-work-on-docker-20-10-9-1cd439d9921
# Workaround until cirrus-images gets updated.
  upgrade_docker_script:
    - apt-get update
    - apt-get upgrade -y docker-ce docker-ce-cli containerd.io
    - systemctl restart docker
    - docker info
  build_script:
    - make
  install_libvirt_vagrant_script:
    - apt-get update
    - apt-get install -y libvirt-daemon libvirt-daemon-system vagrant vagrant-libvirt
    - systemctl enable --now libvirtd
  vagrant_cache:
    fingerprint_script: uname -s ; cat Vagrantfile
    folder: /root/.vagrant.d
  vagrant_up_script:
    - vagrant up
  # <FIXME>
  # Enabling cgroup delegation seems to need rebooting since Fedora 34: https://github.com/rootless-containers/rootlesscontaine.rs/issues/32
  # We shouldn't need this reboot.
  vagrant_reboot_script:
    - vagrant halt
    - vagrant up
  # </FIXME>
  vagrant_ssh_config_script:
    - mkdir -p -m 0700 /root/.ssh
    - vagrant ssh-config >> /root/.ssh/config

task:
  << : *TASK_TEMPLATE
  name: "Single node"
  containerd_test_script:
    - ssh default /vagrant/hack/smoketest-binaries.sh --cri=containerd
  crio_test_script:
    - ssh default /vagrant/hack/smoketest-binaries.sh --cri=crio

docker_template: &DOCKER_TASK_TEMPLATE
  << : *TASK_TEMPLATE
  install_docker_script:
    - ssh default sudo dnf install -y moby-engine docker-compose make
    - ssh default sudo usermod -aG docker vagrant
    - ssh default sudo systemctl enable --now docker
  load_image_script:
    - docker save ghcr.io/rootless-containers/usernetes:latest | ssh default docker load

task:
  << : *DOCKER_TASK_TEMPLATE
  name: "Single node (in Docker)"
  containerd_test_script:
    - ssh default /vagrant/hack/smoketest-docker.sh test-containerd ghcr.io/rootless-containers/usernetes:latest --cri=containerd
  crio_test_script:
    - ssh default /vagrant/hack/smoketest-docker.sh test-crio ghcr.io/rootless-containers/usernetes:latest --cri=crio

task:
  << : *DOCKER_TASK_TEMPLATE
  name: "Multi node with Flannel (in Docker Compose)"
  compose_test_script:
    - ssh default /vagrant/hack/smoketest-docker-compose.sh
