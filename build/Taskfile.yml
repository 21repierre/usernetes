version: '2'

output: prefixed

vars:
# 10/31/2018
  ROOTLESSKIT_COMMIT: 24449198253bb74f38d5c1a6270196f58f2871da
# 11/02/2018
  SLIRP4NETNS_COMMIT: e5c7f16a3f866b2def1cc4d20587553342f6f6eb
# 11/05/2018
  MOBY_COMMIT: 12bba16306dd618883fe2e85ef1730efc572294f
# 11/05/2018
  KUBERNETES_COMMIT: 839c4ec7c3fb117ae7753343b0523814a36ab7f9
# 10/30/2018
  CRIO_COMMIT: f58419d6cf462070a0c3727ad2dc554ef151e832
# 11/06/2018; RUNC_COMMIT is only for CRIO at the moment
  RUNC_COMMIT: b1068fb9258d2cc5aa59505fbb703d914120013d
# 10/18/2018; CNI_PLUGINS_COMMIT is only for CRIO at the moment
  CNI_PLUGINS_COMMIT: b93d284d18dfc8ba93265fa0aa859c7e92df411b
# Kube's build script requires KUBE_GIT_VERSION to be set to a semver string
  KUBE_GIT_VERSION: v1.13-usernetes
  DOCKER_CLI_RELEASE: 18.09.0-rc1
  ETCD_RELEASE: v3.3.10
  GOTASK_RELEASE: v2.2.0

tasks:
  clean:
    cmds:
      - rm -rf ../bin ../_artifact
  build-crio:
    cmds:
      - |
        docker build -t usernetes-build-crio -f crio.Dockerfile \
        --build-arg CRIO_COMMIT={{.CRIO_COMMIT}} \
        --build-arg CNI_PLUGINS_COMMIT={{.CNI_PLUGINS_COMMIT}} \
        --build-arg RUNC_COMMIT={{.RUNC_COMMIT}} .
      - mkdir -p ../bin
      - docker run --rm usernetes-build-crio sh -c 'cd /; tar chf - crio' | tar Cxvf ../bin -
  build-rootlesskit:
    cmds:
      - |
        docker build -t usernetes-build-rootlesskit -f rootlesskit.Dockerfile \
        --build-arg ROOTLESSKIT_COMMIT={{.ROOTLESSKIT_COMMIT}} .
      - mkdir -p ../bin
      - docker run --rm usernetes-build-rootlesskit sh -c 'cd /; tar chf - rootlesskit' | tar Cxvf ../bin -
  build-slirp4netns:
    cmds:
      - |
        docker build -t usernetes-build-slirp4netns -f slirp4netns.Dockerfile \
        --build-arg SLIRP4NETNS_COMMIT={{.SLIRP4NETNS_COMMIT}} .
      - mkdir -p ../bin
      - docker run --rm usernetes-build-slirp4netns sh -c 'cd /slirp4netns; tar chf - slirp4netns' | tar Cxvf ../bin -
  build-moby:
    cmds:
      - docker rm -f usernetes-build-moby 2> /dev/null || true
      - docker volume create usernetes-build-moby-cache
      - |
        docker build -t usernetes-build-moby -f moby.Dockerfile \
        --build-arg MOBY_COMMIT={{.MOBY_COMMIT}} .
      - |
        docker run --name usernetes-build-moby \
        -d  --privileged \
        -v usernetes-build-moby-cache:/var/lib/docker \
        usernetes-build-moby dockerd --experimental
      - docker exec -e DOCKER_BUILDKIT=1 usernetes-build-moby make binary
      - mkdir -p ../bin/moby
# `docker exec -w` is not available in Docker 17.09
      - docker exec usernetes-build-moby sh -c 'cd /moby/bundles/binary-daemon; tar chf - dockerd containerd ctr containerd-shim runc docker-init docker-proxy' | tar Cxvf ../bin/moby -
      - docker rm -f usernetes-build-moby
  build-docker-cli:
    cmds:
      - docker rm -f usernetes-build-docker-cli 2> /dev/null || true
      - docker create --name usernetes-build-docker-cli docker:{{.DOCKER_CLI_RELEASE}}
      - mkdir -p ../bin
      - docker cp usernetes-build-docker-cli:/usr/local/bin/docker ../bin
      - docker rm -f usernetes-build-docker-cli
  build-kubernetes:
    cmds:
      - docker rm -f usernetes-build-kubernetes 2> /dev/null || true
      - docker volume create usernetes-build-kubernetes-cache
      - |
        docker build -t usernetes-build-kubernetes -f kubernetes.Dockerfile \
        --build-arg KUBERNETES_COMMIT={{.KUBERNETES_COMMIT}} .
# FIXME: how to build it as a static binary??
      - |
        docker run --name usernetes-build-kubernetes \
        -v usernetes-build-kubernetes-cache:/root/.cache  \
        -e KUBE_GIT_VERSION={{.KUBE_GIT_VERSION}} \
        usernetes-build-kubernetes bazel build cmd/hyperkube
      - mkdir -p ../bin
      - docker cp usernetes-build-kubernetes:/kubernetes/bazel-bin/cmd/hyperkube/linux_amd64_stripped/hyperkube ../bin
      - docker rm -f usernetes-build-kubernetes
  build-etcd:
    cmds:
      - mkdir -p ../bin
      - curl -L https://github.com/etcd-io/etcd/releases/download/{{.ETCD_RELEASE}}/etcd-{{.ETCD_RELEASE}}-linux-amd64.tar.gz | tar Cxzvf ../bin - etcd-{{.ETCD_RELEASE}}-linux-amd64/etcd etcd-{{.ETCD_RELEASE}}-linux-amd64/etcdctl --strip-components=1
  build-go-task:
    cmds:
      - mkdir -p ../bin
      - curl -L https://github.com/go-task/task/releases/download/{{.GOTASK_RELEASE}}/task_linux_amd64.tar.gz | tar Cxzvf ../bin - task
  build-artifact:
    cmds:
      - mkdir -p ../_artifact
      - ( cd .. ; tar --transform 's@^\.@usernetes@' --exclude-vcs --exclude=./_artifact -cjvf ./_artifact/usernetes-x86_64.tbz . )
  default:
    deps: [build-rootlesskit,build-slirp4netns,build-moby,build-docker-cli,build-crio,build-kubernetes,build-etcd,build-go-task]
    cmds:
      - task: build-artifact
