version: '2'

output: prefixed

vars:
# 12/25/2018 (v0.2.0)
  ROOTLESSKIT_COMMIT: 77cdbed39ff42bc96fb23830065ec2e28b7767e6
# 12/25/2018 (v0.2.0)
  SLIRP4NETNS_COMMIT: 4a59899d79285e9962550f171f73492171aae267
# 01/08/2019
  MOBY_COMMIT: f9dbd383bb6e31d97ec276ef7dbf69e89bc22f66
# 01/07/2019
  KUBERNETES_COMMIT: 8b3b5a9fe7b57cfe014927d575a9ad90cb536419
# 01/07/2019
  CRIO_COMMIT: 650fae1c52ff809c8447fd6dcdc1e9e3747efe65
# 01/03/2019
  CONTAINERD_COMMIT: 231bff7f60ce6536fb402c1d2fa7246d0d2e1de1
# 12/20/2018
  RUNC_COMMIT: bbb17efcb4c0ab986407812a31ba333a7450064c
# 12/20/2018
  CNI_PLUGINS_COMMIT: ee819c71a17d50f27439dbd979337effb2efd21b
# Kube's build script requires KUBE_GIT_VERSION to be set to a semver string
  KUBE_GIT_VERSION: v1.14-usernetes
  DOCKER_CLI_RELEASE: 18.09.1-rc1
  ETCD_RELEASE: v3.3.10
  GOTASK_RELEASE: v2.3.0

tasks:
  clean:
    cmds:
      - rm -rf ../bin ../_artifact
  build-crio:
    cmds:
      - |
        docker build -t usernetes-build-crio -f crio.Dockerfile \
        --build-arg CRIO_COMMIT={{.CRIO_COMMIT}} .
      - mkdir -p ../bin
      - docker run --rm usernetes-build-crio sh -c 'cd /out; tar chf - *' | tar Cxvf ../bin -
  build-rootlesskit:
    cmds:
      - |
        docker build -t usernetes-build-rootlesskit -f rootlesskit.Dockerfile \
        --build-arg ROOTLESSKIT_COMMIT={{.ROOTLESSKIT_COMMIT}} .
      - mkdir -p ../bin
      - docker run --rm usernetes-build-rootlesskit sh -c 'cd /out; tar chf - *' | tar Cxvf ../bin -
  build-slirp4netns:
    cmds:
      - |
        docker build -t usernetes-build-slirp4netns -f slirp4netns.Dockerfile \
        --build-arg SLIRP4NETNS_COMMIT={{.SLIRP4NETNS_COMMIT}} .
      - mkdir -p ../bin
      - docker run --rm usernetes-build-slirp4netns sh -c 'cd /out; tar chf - *' | tar Cxvf ../bin -
  build-moby:
    cmds:
      - |
        docker build -t usernetes-build-moby -f moby.Dockerfile \
        --build-arg MOBY_COMMIT={{.MOBY_COMMIT}} .
      - mkdir -p ../bin
      - docker run --rm usernetes-build-moby sh -c 'cd /out; tar chf - *' | tar Cxvf ../bin -
  build-docker-cli:
    cmds:
      - docker rm -f usernetes-build-docker-cli 2> /dev/null || true
      - docker create --name usernetes-build-docker-cli docker:{{.DOCKER_CLI_RELEASE}}
      - mkdir -p ../bin
      - docker cp usernetes-build-docker-cli:/usr/local/bin/docker ../bin
      - docker rm -f usernetes-build-docker-cli
  build-containerd:
    cmds:
      - |
        docker build -t usernetes-build-containerd -f containerd.Dockerfile \
        --build-arg RUNC_COMMIT={{.RUNC_COMMIT}} .
      - mkdir -p ../bin
      - docker run --rm usernetes-build-containerd sh -c 'cd /out; tar chf - *' | tar Cxvf ../bin -
  build-runc:
    cmds:
      - |
        docker build -t usernetes-build-runc -f runc.Dockerfile \
        --build-arg CONTAINERD_COMMIT={{.CONTAINERD_COMMIT}} .
      - mkdir -p ../bin
      - docker run --rm usernetes-build-runc sh -c 'cd /out; tar chf - *' | tar Cxvf ../bin -
  build-cni:
    cmds:
      - |
        docker build -t usernetes-build-cni -f cni.Dockerfile \
        --build-arg CNI_PLUGINS_COMMIT={{.CNI_PLUGINS_COMMIT}} .
      - mkdir -p ../bin
      - docker run --rm usernetes-build-cni sh -c 'cd /out; tar chf - *' | tar Cxvf ../bin -
  build-kubernetes:
    cmds:
      - docker rm -f usernetes-build-kubernetes 2> /dev/null || true
      - docker volume create usernetes-build-kubernetes-cache
      - |
        docker build -t usernetes-build-kubernetes -f kubernetes.Dockerfile \
        --build-arg KUBERNETES_COMMIT={{.KUBERNETES_COMMIT}} .
# FIXME: how to build it as a static binary??
      - |
        docker run --name usernetes-build-kubernetes \
        -v usernetes-build-kubernetes-cache:/root/.cache  \
        -e KUBE_GIT_VERSION={{.KUBE_GIT_VERSION}} \
        usernetes-build-kubernetes bazel build cmd/hyperkube
      - mkdir -p ../bin
      - docker cp usernetes-build-kubernetes:/kubernetes/bazel-bin/cmd/hyperkube/linux_amd64_stripped/hyperkube ../bin
      - docker rm -f usernetes-build-kubernetes
  build-etcd:
    cmds:
      - mkdir -p ../bin
      - curl -L https://github.com/etcd-io/etcd/releases/download/{{.ETCD_RELEASE}}/etcd-{{.ETCD_RELEASE}}-linux-amd64.tar.gz | tar Cxzvf ../bin - etcd-{{.ETCD_RELEASE}}-linux-amd64/etcd etcd-{{.ETCD_RELEASE}}-linux-amd64/etcdctl --strip-components=1
  build-go-task:
    cmds:
      - mkdir -p ../bin
      - curl -L https://github.com/go-task/task/releases/download/{{.GOTASK_RELEASE}}/task_linux_amd64.tar.gz | tar Cxzvf ../bin - task
  build-artifact:
    cmds:
      - mkdir -p ../_artifact
      - ( cd .. ; tar --transform 's@^\.@usernetes@' --exclude-vcs --exclude=./_artifact -cjvf ./_artifact/usernetes-x86_64.tbz . )
  default:
    deps: [build-rootlesskit,build-slirp4netns,build-moby,build-docker-cli,build-containerd,build-runc,build-cni,build-crio,build-kubernetes,build-etcd,build-go-task]
    cmds:
      - task: build-artifact
