From 3b77a57c180fd81ebc3041de1b4987163c42ef9d Mon Sep 17 00:00:00 2001
From: Akihiro Suda <suda.akihiro@lab.ntt.co.jp>
Date: Thu, 8 Nov 2018 16:44:43 +0900
Subject: [PATCH] [DNM/DIRTYVENDOR] rootless CRI

TODO: decouple apparmor and oomscoreadj from "NoCgroup"

Signed-off-by: Akihiro Suda <suda.akihiro@lab.ntt.co.jp>
---
 vendor/github.com/containerd/cri/pkg/config/config.go    | 3 +++
 .../containerd/cri/pkg/server/container_create.go        | 7 ++++++-
 .../github.com/containerd/cri/pkg/server/sandbox_run.go  | 9 ++++++++-
 3 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/vendor/github.com/containerd/cri/pkg/config/config.go b/vendor/github.com/containerd/cri/pkg/config/config.go
index 7d53a7b5..8d5dfcfd 100644
--- a/vendor/github.com/containerd/cri/pkg/config/config.go
+++ b/vendor/github.com/containerd/cri/pkg/config/config.go
@@ -142,6 +142,9 @@ type PluginConfig struct {
 	// Log line longer than the limit will be split into multiple lines. Non-positive
 	// value means no limit.
 	MaxContainerLogLineSize int `toml:"max_container_log_line_size" json:"maxContainerLogSize"`
+	// NoCgroup indicates to disable the cgroup support.
+	// This is useful when the daemon does not have permission to access cgroups.
+	NoCgroup bool `toml:"no_cgroup" json:"noCgroup"`
 }
 
 // X509KeyPairStreaming contains the x509 configuration for streaming
diff --git a/vendor/github.com/containerd/cri/pkg/server/container_create.go b/vendor/github.com/containerd/cri/pkg/server/container_create.go
index e29cb40f..ecb81451 100644
--- a/vendor/github.com/containerd/cri/pkg/server/container_create.go
+++ b/vendor/github.com/containerd/cri/pkg/server/container_create.go
@@ -418,7 +418,12 @@ func (c *criService) generateContainerSpec(id string, sandboxID string, sandboxP
 
 	setOCILinuxResource(&g, config.GetLinux().GetResources())
 
-	if sandboxConfig.GetLinux().GetCgroupParent() != "" {
+	if c.config.NoCgroup {
+		g.SetLinuxCgroupsPath("")
+		g.Config.Linux.Resources = nil
+		g.Config.Process.OOMScoreAdj = nil
+		g.Config.Process.ApparmorProfile = ""
+	} else if sandboxConfig.GetLinux().GetCgroupParent() != "" {
 		cgroupsPath := getCgroupsPath(sandboxConfig.GetLinux().GetCgroupParent(), id,
 			c.config.SystemdCgroup)
 		g.SetLinuxCgroupsPath(cgroupsPath)
diff --git a/vendor/github.com/containerd/cri/pkg/server/sandbox_run.go b/vendor/github.com/containerd/cri/pkg/server/sandbox_run.go
index 959a5189..8e513d96 100644
--- a/vendor/github.com/containerd/cri/pkg/server/sandbox_run.go
+++ b/vendor/github.com/containerd/cri/pkg/server/sandbox_run.go
@@ -368,7 +368,9 @@ func (c *criService) generateSandboxContainerSpec(id string, config *runtime.Pod
 	// TODO(random-liu): [P2] Consider whether to add labels and annotations to the container.
 
 	// Set cgroups parent.
-	if config.GetLinux().GetCgroupParent() != "" {
+	if c.config.NoCgroup {
+		g.SetLinuxCgroupsPath("")
+	} else if config.GetLinux().GetCgroupParent() != "" {
 		cgroupsPath := getCgroupsPath(config.GetLinux().GetCgroupParent(), id,
 			c.config.SystemdCgroup)
 		g.SetLinuxCgroupsPath(cgroupsPath)
@@ -433,6 +435,11 @@ func (c *criService) generateSandboxContainerSpec(id string, config *runtime.Pod
 	g.AddAnnotation(annotations.ContainerType, annotations.ContainerTypeSandbox)
 	g.AddAnnotation(annotations.SandboxID, id)
 
+	if c.config.NoCgroup {
+		g.Config.Linux.Resources = nil
+		g.Config.Process.OOMScoreAdj = nil
+		g.Config.Process.ApparmorProfile = ""
+	}
 	return g.Config, nil
 }
 
-- 
2.17.1

